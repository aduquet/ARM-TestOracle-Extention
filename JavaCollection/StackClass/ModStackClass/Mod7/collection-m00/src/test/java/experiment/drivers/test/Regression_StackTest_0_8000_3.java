package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_StackTest_0_8000_3 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1501");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj24 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1502");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver9.pop();
        java.lang.Object obj28 = stackTestDriver0.push(obj27);
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1503");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        java.lang.Object obj28 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver29.push(obj40);
        java.lang.Object obj42 = stackTestDriver6.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver6.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass50 = stackTestDriver43.getClass();
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver43.push(obj52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1504");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        java.lang.Object obj27 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1505");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass73 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1506");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver40.push(obj54);
        java.lang.Object obj56 = stackTestDriver35.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver60.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj72 = stackTestDriver65.pop();
        java.lang.Class<?> wildcardClass73 = stackTestDriver65.getClass();
        java.lang.Object obj74 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj75 = stackTestDriver35.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj76 = stackTestDriver20.push(obj75);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        java.lang.Object obj78 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1507");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver40.push(obj54);
        java.lang.Object obj56 = stackTestDriver35.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver60.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj72 = stackTestDriver65.pop();
        java.lang.Class<?> wildcardClass73 = stackTestDriver65.getClass();
        java.lang.Object obj74 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj75 = stackTestDriver35.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj76 = stackTestDriver20.push(obj75);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        java.lang.Object obj78 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1508");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver32.getClass();
        java.lang.Object obj39 = stackTestDriver8.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) (byte) -1);
        stackTestDriver40.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver40.getClass();
        java.lang.Object obj54 = stackTestDriver8.push((java.lang.Object) wildcardClass53);
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) -1 + "'", obj51, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1509");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj64 = stackTestDriver48.push((java.lang.Object) stackTestDriver55);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        stackTestDriver65.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver65.push(obj76);
        java.lang.Object obj78 = stackTestDriver48.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj79 = stackTestDriver41.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj80 = stackTestDriver32.push(obj79);
        java.lang.Object obj81 = stackTestDriver17.push(obj79);
        java.lang.Class<?> wildcardClass82 = stackTestDriver17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0d + "'", obj47, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1510");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        stackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) wildcardClass21);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj41 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver26.push((java.lang.Object) wildcardClass45);
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver26.push((java.lang.Object) 0.0f);
        java.lang.Object obj51 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver26.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1511");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Object obj29 = stackTestDriver13.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (byte) 100);
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver30.push(obj41);
        java.lang.Object obj43 = stackTestDriver13.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj44 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver59.push((java.lang.Object) 100L);
        java.lang.Object obj67 = stackTestDriver59.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj72 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        java.lang.Object obj74 = stackTestDriver50.push((java.lang.Object) stackTestDriver59);
        java.lang.Class<?> wildcardClass75 = stackTestDriver59.getClass();
        java.lang.Object obj76 = stackTestDriver30.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass78 = stackTestDriver30.getClass();
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) stackTestDriver30);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1512");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        java.lang.Object obj24 = stackTestDriver7.push(obj23);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1513");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver14.push(obj36);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver42.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver47.pop();
        java.lang.Class<?> wildcardClass55 = stackTestDriver47.getClass();
        java.lang.Object obj56 = stackTestDriver39.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj57 = stackTestDriver38.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj58 = stackTestDriver39.pop();
        java.lang.Object obj59 = stackTestDriver14.push(obj58);
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = stackTestDriver0.push(obj58);
        java.lang.Class<?> wildcardClass62 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1514");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = stackTestDriver9.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1515");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1516");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1517");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass28 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1518");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = stackTestDriver28.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = stackTestDriver44.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj66 = stackTestDriver28.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj67 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj77 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj80 = stackTestDriver28.push((java.lang.Object) stackTestDriver68);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0d + "'", obj35, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1519");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver68.push(obj74);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver78.push(obj92);
        java.lang.Object obj94 = stackTestDriver68.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj95 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1520");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        stackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) wildcardClass9);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass61 = stackTestDriver45.getClass();
        java.lang.Object obj62 = stackTestDriver30.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj63 = stackTestDriver14.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass64 = stackTestDriver14.getClass();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) wildcardClass64);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1521");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1522");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = stackTestDriver8.push((java.lang.Object) 1.0d);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj43 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj57 = stackTestDriver16.push(obj56);
        java.lang.Object obj58 = stackTestDriver8.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        stackTestDriver59.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver59.getClass();
        java.lang.Object obj66 = stackTestDriver8.push((java.lang.Object) wildcardClass65);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver68.push(obj79);
        java.lang.Object obj81 = stackTestDriver8.push(obj80);
        java.lang.Object obj82 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass83 = stackTestDriver8.getClass();
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0d + "'", obj14, 1.0d);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1523");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver66.pop();
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1524");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj70 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        stackTestDriver58.clear();
        java.lang.Object obj72 = stackTestDriver52.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver73);
        stackTestDriver73.clear();
        java.lang.Object obj77 = stackTestDriver8.push((java.lang.Object) stackTestDriver73);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1525");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver26.push(obj32);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        java.lang.Object obj43 = stackTestDriver26.push(obj42);
        java.lang.Object obj44 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver26.getClass();
        java.lang.Object obj48 = stackTestDriver1.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass49 = stackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1526");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver37.push((java.lang.Object) stackTestDriver53);
        java.lang.Class<?> wildcardClass64 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1527");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1528");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj58 = stackTestDriver42.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver59.push(obj70);
        java.lang.Object obj72 = stackTestDriver42.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj73 = stackTestDriver35.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj74 = stackTestDriver26.push(obj73);
        java.lang.Object obj75 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        java.lang.Object obj90 = stackTestDriver76.push((java.lang.Object) (-1.0d));
        java.lang.Object obj91 = stackTestDriver26.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj92 = stackTestDriver26.pop();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0d + "'", obj41, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (-1.0d) + "'", obj90, (-1.0d));
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1529");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = stackTestDriver7.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver23.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = stackTestDriver7.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj46 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = stackTestDriver47.push((java.lang.Object) false);
        java.lang.Object obj56 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj59 = stackTestDriver7.push((java.lang.Object) stackTestDriver47);
        java.lang.Class<?> wildcardClass60 = stackTestDriver7.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0d + "'", obj14, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1530");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver10.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = stackTestDriver36.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1531");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj76 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass77 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1532");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj68 = stackTestDriver0.pop();
        java.lang.Object obj69 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1533");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) 0.0f);
        stackTestDriver47.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver47.getClass();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj55 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1534");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = stackTestDriver41.push((java.lang.Object) stackTestDriver46);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Class<?> wildcardClass55 = stackTestDriver46.getClass();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj57 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1535");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1536");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1537");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver18.push(obj29);
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver32.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        java.lang.Object obj75 = stackTestDriver32.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1538");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj97 = stackTestDriver55.push((java.lang.Object) (byte) -1);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (byte) -1 + "'", obj97, (byte) -1);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1539");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (byte) 100);
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver32.push(obj43);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver32.getClass();
        java.lang.Object obj47 = stackTestDriver0.push((java.lang.Object) wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1540");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        java.lang.Object obj91 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Short");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1541");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        stackTestDriver61.clear();
        java.lang.Object obj75 = stackTestDriver55.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = stackTestDriver61.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1542");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj68 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1543");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj78 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj79 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        stackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = stackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = stackTestDriver64.push((java.lang.Object) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = stackTestDriver64.getClass();
        java.lang.Object obj87 = stackTestDriver0.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10.0f + "'", obj77, 10.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10.0f + "'", obj78, 10.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1544");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        stackTestDriver19.clear();
        java.lang.Object obj33 = stackTestDriver13.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver19.push((java.lang.Object) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1545");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj38 = stackTestDriver1.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1546");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 1L);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver0.push(obj50);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj69 = stackTestDriver53.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver70);
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        java.lang.Object obj87 = stackTestDriver0.push((java.lang.Object) stackTestDriver53);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1L + "'", obj52, 1L);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1547");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj72 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        java.lang.Class<?> wildcardClass74 = stackTestDriver58.getClass();
        java.lang.Object obj75 = stackTestDriver43.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj76 = stackTestDriver5.push(obj75);
        java.lang.Object obj77 = stackTestDriver5.pop();
        java.lang.Object obj78 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Class<?> wildcardClass80 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1548");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj77 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1549");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver58.pop();
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj65 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1550");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1551");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        java.lang.Object obj50 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        java.lang.Object obj67 = stackTestDriver51.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver68.push(obj79);
        java.lang.Object obj81 = stackTestDriver51.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj84 = stackTestDriver28.push((java.lang.Object) stackTestDriver68);
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver86.pop();
        java.lang.Object obj92 = stackTestDriver28.push((java.lang.Object) stackTestDriver86);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1552");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver55.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj68 = stackTestDriver55.pop();
        java.lang.Object obj69 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) 0.0f);
        java.lang.Object obj75 = stackTestDriver55.push((java.lang.Object) 0.0f);
        java.lang.Object obj76 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass77 = stackTestDriver55.getClass();
        java.lang.Object obj78 = stackTestDriver40.push((java.lang.Object) stackTestDriver55);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0.0f + "'", obj74, 0.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0.0f + "'", obj75, 0.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0f + "'", obj76, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1553");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass75 = stackTestDriver68.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) wildcardClass75);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1554");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        java.lang.Object obj48 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass50 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1555");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1556");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver68.push(obj74);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver78.push(obj92);
        java.lang.Object obj94 = stackTestDriver68.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj95 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        java.lang.Class<?> wildcardClass99 = stackTestDriver68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1557");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass55 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1558");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Object obj53 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        java.lang.Object obj73 = stackTestDriver67.push((java.lang.Object) 100L);
        java.lang.Object obj75 = stackTestDriver67.push((java.lang.Object) false);
        java.lang.Object obj76 = stackTestDriver67.pop();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver67.push(obj81);
        java.lang.Object obj83 = stackTestDriver62.push(obj81);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver86.pop();
        stackTestDriver86.clear();
        java.lang.Object obj93 = stackTestDriver62.push((java.lang.Object) stackTestDriver86);
        java.lang.Object obj94 = stackTestDriver55.push((java.lang.Object) stackTestDriver86);
        stackTestDriver86.clear();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver86);
        stackTestDriver86.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0f + "'", obj66, 0.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1559");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1560");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver67.getClass();
        java.lang.Object obj92 = stackTestDriver42.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj93 = stackTestDriver16.push(obj92);
        java.lang.Object obj94 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = stackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1561");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        stackTestDriver5.clear();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = stackTestDriver5.push((java.lang.Object) wildcardClass8);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = stackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = stackTestDriver13.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver13);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10.0f + "'", obj26, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1562");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver28.push(obj34);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver38.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj51 = stackTestDriver28.push(obj50);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver28.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj84 = stackTestDriver60.pop();
        java.lang.Object obj85 = stackTestDriver60.pop();
        java.lang.Object obj86 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Class<?> wildcardClass88 = stackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1563");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj70 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        stackTestDriver58.clear();
        java.lang.Object obj72 = stackTestDriver52.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver73);
        stackTestDriver73.clear();
        java.lang.Object obj77 = stackTestDriver8.push((java.lang.Object) stackTestDriver73);
        stackTestDriver73.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver73.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1564");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1565");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = stackTestDriver9.push((java.lang.Object) false);
        java.lang.Object obj18 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        stackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) wildcardClass22);
        java.lang.Object obj24 = stackTestDriver9.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push(obj23);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass44 = stackTestDriver26.getClass();
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1566");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Object obj64 = stackTestDriver21.pop();
        java.lang.Object obj65 = stackTestDriver21.pop();
        java.lang.Object obj66 = stackTestDriver21.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1567");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1568");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass27 = stackTestDriver15.getClass();
        java.lang.Object obj28 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1569");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver7.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver7.push(obj23);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj57 = stackTestDriver26.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj58 = stackTestDriver7.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj59 = stackTestDriver7.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver7.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1570");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass99 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1571");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1572");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver68.push(obj82);
        java.lang.Object obj84 = stackTestDriver63.push(obj82);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver87.pop();
        stackTestDriver87.clear();
        java.lang.Object obj94 = stackTestDriver63.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj95 = stackTestDriver56.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver87);
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0.0f + "'", obj67, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1573");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj33 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        java.lang.Object obj51 = stackTestDriver35.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver52.push(obj63);
        java.lang.Object obj65 = stackTestDriver35.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj66 = stackTestDriver52.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) (byte) -1);
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver72.push((java.lang.Object) stackTestDriver80);
        stackTestDriver80.clear();
        java.lang.Object obj95 = stackTestDriver52.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj97 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (byte) -1 + "'", obj91, (byte) -1);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1574");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj23 = stackTestDriver14.pop();
        java.lang.Object obj24 = stackTestDriver8.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver28.pop();
        java.lang.Object obj44 = stackTestDriver28.pop();
        java.lang.Object obj45 = stackTestDriver8.push((java.lang.Object) stackTestDriver28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = stackTestDriver28.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1575");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver58.pop();
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj65 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass66 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1576");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver7.push((java.lang.Object) stackTestDriver12);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        stackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) wildcardClass22);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver33.push((java.lang.Object) 10.0f);
        java.lang.Object obj41 = stackTestDriver27.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver27.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = stackTestDriver12.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) 0.0f);
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Object obj73 = stackTestDriver57.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        stackTestDriver81.clear();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = stackTestDriver81.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = stackTestDriver74.push(obj85);
        java.lang.Object obj87 = stackTestDriver57.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj88 = stackTestDriver50.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver27.push((java.lang.Object) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = stackTestDriver27.getClass();
        java.lang.Object obj92 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0f + "'", obj54, 0.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0d + "'", obj56, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1577");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj20 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver26.pop();
        java.lang.Object obj40 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj42 = stackTestDriver23.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj43 = stackTestDriver23.pop();
        java.lang.Object obj44 = stackTestDriver8.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj46 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass47 = stackTestDriver23.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1578");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1579");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = stackTestDriver13.push((java.lang.Object) 10.0f);
        java.lang.Object obj21 = stackTestDriver7.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver22.push(obj41);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = stackTestDriver47.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj59 = stackTestDriver52.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver52.getClass();
        java.lang.Object obj61 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj62 = stackTestDriver22.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj63 = stackTestDriver7.push(obj62);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj65 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10.0f + "'", obj20, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1580");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        java.lang.Class<?> wildcardClass28 = stackTestDriver14.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) wildcardClass28);
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1581");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver20.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1582");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver7.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj19 = stackTestDriver12.pop();
        java.lang.Object obj20 = stackTestDriver0.push(obj19);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1583");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj32 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1584");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        java.lang.Object obj32 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1585");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1586");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        stackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        java.lang.Object obj22 = stackTestDriver6.push((java.lang.Object) stackTestDriver13);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver6.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver38.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj75 = stackTestDriver68.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver68.getClass();
        java.lang.Object obj77 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj78 = stackTestDriver38.push((java.lang.Object) stackTestDriver60);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj81 = stackTestDriver6.push((java.lang.Object) stackTestDriver60);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1587");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1588");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) 0.0f);
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 1.0d);
        stackTestDriver49.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver49.getClass();
        java.lang.Object obj58 = stackTestDriver46.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj59 = stackTestDriver0.push(obj58);
        java.lang.Object obj60 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0.0f + "'", obj53, 0.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0d + "'", obj55, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1589");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 0.0f);
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj54 = stackTestDriver38.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver38.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj69 = stackTestDriver31.push((java.lang.Object) stackTestDriver55);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        java.lang.Object obj72 = stackTestDriver8.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj73 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0d + "'", obj37, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1590");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj23 = stackTestDriver14.pop();
        java.lang.Object obj24 = stackTestDriver8.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj26 = stackTestDriver8.pop();
        java.lang.Object obj27 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1591");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1592");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver27.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj40 = stackTestDriver17.push(obj39);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver49.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj71 = stackTestDriver17.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj72 = stackTestDriver49.pop();
        java.lang.Object obj73 = stackTestDriver10.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1593");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1594");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Object obj19 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass24 = stackTestDriver20.getClass();
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        java.lang.Class<?> wildcardClass26 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1595");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass52 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1596");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver5.push((java.lang.Object) 1);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver16.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = stackTestDriver57.push((java.lang.Object) 0.0d);
        java.lang.Object obj66 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass67 = stackTestDriver57.getClass();
        java.lang.Object obj68 = stackTestDriver16.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver5.push((java.lang.Object) stackTestDriver16);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0d + "'", obj64, 0.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1597");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1598");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver17.push((java.lang.Object) stackTestDriver34);
        java.lang.Class<?> wildcardClass43 = stackTestDriver34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1599");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1600");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver5.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj32 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj34 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj35 = stackTestDriver10.pop();
        java.lang.Object obj36 = stackTestDriver0.push(obj35);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1601");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Object obj8 = stackTestDriver0.push(obj7);
        java.lang.Object obj9 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1602");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass14 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100.0d + "'", obj12, 100.0d);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100.0d + "'", obj13, 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1603");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver9.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj35 = stackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = stackTestDriver29.push((java.lang.Object) false);
        java.lang.Object obj38 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver29.push(obj43);
        java.lang.Object obj45 = stackTestDriver24.push(obj43);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver24.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver9.push(obj64);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver69.push(obj75);
        java.lang.Object obj78 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        java.lang.Object obj80 = stackTestDriver9.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Class<?> wildcardClass82 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1604");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1605");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        java.lang.Object obj85 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj87 = stackTestDriver79.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj90 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        stackTestDriver79.clear();
        java.lang.Object obj93 = stackTestDriver9.push((java.lang.Object) stackTestDriver79);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1606");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        java.lang.Object obj38 = stackTestDriver0.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver39.push(obj45);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver49.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj62 = stackTestDriver39.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj83 = stackTestDriver64.pop();
        java.lang.Object obj84 = stackTestDriver39.push(obj83);
        stackTestDriver39.clear();
        java.lang.Object obj86 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass89 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1607");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1608");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Class<?> wildcardClass31 = stackTestDriver17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1609");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = stackTestDriver8.pop();
        java.lang.Object obj31 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1610");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) 10L);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10L + "'", obj52, 10L);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1611");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1612");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) (-1));
        stackTestDriver37.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver63.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver63.push((java.lang.Object) false);
        java.lang.Object obj72 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj75 = stackTestDriver37.push((java.lang.Object) stackTestDriver63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = stackTestDriver63.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1) + "'", obj60, (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1613");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1614");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Class<?> wildcardClass41 = stackTestDriver39.getClass();
        java.lang.Object obj42 = stackTestDriver15.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj43 = stackTestDriver8.push((java.lang.Object) stackTestDriver39);
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass45 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1615");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Object obj41 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        java.lang.Class<?> wildcardClass48 = stackTestDriver42.getClass();
        java.lang.Object obj49 = stackTestDriver0.push((java.lang.Object) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100.0f + "'", obj40, 100.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100.0f + "'", obj41, 100.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1616");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj93 = stackTestDriver22.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1617");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        stackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver14.push((java.lang.Object) wildcardClass17);
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj36 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver14.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj38 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver40.getClass();
        java.lang.Object obj54 = stackTestDriver22.push((java.lang.Object) stackTestDriver40);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj57 = stackTestDriver5.push((java.lang.Object) stackTestDriver22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1618");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass40 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1619");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        java.lang.Object obj65 = stackTestDriver49.push(obj64);
        java.lang.Object obj66 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass69 = stackTestDriver49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1620");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1621");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = stackTestDriver39.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass47 = stackTestDriver39.getClass();
        java.lang.Object obj48 = stackTestDriver16.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver0.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0d + "'", obj46, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1622");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        java.lang.Object obj24 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver51.push(obj65);
        java.lang.Object obj67 = stackTestDriver46.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass84 = stackTestDriver76.getClass();
        java.lang.Object obj85 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj86 = stackTestDriver46.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj87 = stackTestDriver26.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj88 = stackTestDriver46.pop();
        java.lang.Object obj89 = stackTestDriver46.pop();
        java.lang.Object obj90 = stackTestDriver1.push(obj89);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1623");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Class<?> wildcardClass35 = stackTestDriver23.getClass();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver37.push(obj43);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = stackTestDriver47.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver47.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj60 = stackTestDriver37.push(obj59);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        stackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver69.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj91 = stackTestDriver37.push((java.lang.Object) stackTestDriver69);
        java.lang.Class<?> wildcardClass92 = stackTestDriver37.getClass();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1624");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj78 = stackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj80 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass81 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1 + "'", obj78, 1);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1625");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass41 = stackTestDriver25.getClass();
        java.lang.Object obj42 = stackTestDriver10.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver43.push(obj49);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = stackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = stackTestDriver53.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver53.push(obj67);
        java.lang.Object obj69 = stackTestDriver43.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj70 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj83 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj84 = stackTestDriver43.push(obj83);
        java.lang.Object obj85 = stackTestDriver10.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj86 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1626");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1627");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver21.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj33 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj35 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1628");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass75 = stackTestDriver68.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1629");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj20 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver26.pop();
        java.lang.Object obj40 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj42 = stackTestDriver23.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj43 = stackTestDriver23.pop();
        java.lang.Object obj44 = stackTestDriver8.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = stackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1630");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        stackTestDriver49.clear();
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj60 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1631");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver21.push((java.lang.Object) stackTestDriver46);
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver21.getClass();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj69 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver70.push(obj76);
        java.lang.Object obj79 = stackTestDriver70.pop();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = stackTestDriver80.pop();
        java.lang.Object obj87 = stackTestDriver70.push(obj86);
        stackTestDriver70.clear();
        java.lang.Class<?> wildcardClass89 = stackTestDriver70.getClass();
        java.lang.Object obj90 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1632");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj53 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver55.pop();
        java.lang.Object obj74 = stackTestDriver46.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push(obj74);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1633");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Class<?> wildcardClass51 = stackTestDriver45.getClass();
        java.lang.Object obj52 = stackTestDriver25.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver1.push(obj52);
        stackTestDriver1.clear();
        java.lang.Class<?> wildcardClass55 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1634");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver33.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj45 = stackTestDriver38.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver38.getClass();
        java.lang.Object obj47 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj48 = stackTestDriver29.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj49 = stackTestDriver30.pop();
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1635");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 1L);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj35 = stackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = stackTestDriver29.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver29.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (-1));
        java.lang.Object obj44 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver45.push(obj51);
        java.lang.Object obj54 = stackTestDriver45.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver55.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj68 = stackTestDriver45.push(obj67);
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Object obj70 = stackTestDriver38.push(obj67);
        java.lang.Object obj71 = stackTestDriver22.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) 0.0f);
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        java.lang.Object obj85 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Object obj87 = stackTestDriver72.push((java.lang.Object) stackTestDriver79);
        java.lang.Class<?> wildcardClass88 = stackTestDriver79.getClass();
        java.lang.Object obj89 = stackTestDriver22.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj91 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1L + "'", obj26, 1L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1) + "'", obj43, (-1));
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (-1) + "'", obj44, (-1));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0f + "'", obj76, 0.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0d + "'", obj78, 1.0d);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1636");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver45.push(obj51);
        java.lang.Object obj54 = stackTestDriver45.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver55.pop();
        java.lang.Object obj62 = stackTestDriver45.push(obj61);
        java.lang.Object obj63 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver45.getClass();
        java.lang.Object obj65 = stackTestDriver25.push((java.lang.Object) stackTestDriver45);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1637");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver50.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj72 = stackTestDriver34.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj73 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = stackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        stackTestDriver74.clear();
        java.lang.Object obj86 = stackTestDriver34.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj87 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass88 = stackTestDriver34.getClass();
        java.lang.Object obj89 = stackTestDriver1.push((java.lang.Object) stackTestDriver34);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0.0d + "'", obj41, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1638");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1639");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        java.lang.Object obj65 = stackTestDriver49.push(obj64);
        java.lang.Object obj66 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj69 = stackTestDriver8.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1640");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj25 = stackTestDriver0.push(obj24);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        java.lang.Object obj50 = stackTestDriver34.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver34.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) stackTestDriver51);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0d + "'", obj33, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1641");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj97 = stackTestDriver55.push((java.lang.Object) (byte) -1);
        stackTestDriver55.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = stackTestDriver55.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (byte) -1 + "'", obj97, (byte) -1);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1642");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        stackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj45 = stackTestDriver29.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver46.push(obj57);
        java.lang.Object obj59 = stackTestDriver29.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj60 = stackTestDriver22.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) (byte) 100);
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver61.push(obj72);
        java.lang.Class<?> wildcardClass74 = stackTestDriver61.getClass();
        java.lang.Object obj75 = stackTestDriver46.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj77 = stackTestDriver46.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0d + "'", obj28, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1643");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) 0.0f);
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 1.0d);
        java.lang.Object obj58 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 0.0d);
        java.lang.Object obj68 = stackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver51.push(obj68);
        stackTestDriver51.clear();
        java.lang.Object obj71 = stackTestDriver41.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj72 = stackTestDriver8.push((java.lang.Object) stackTestDriver51);
        java.lang.Class<?> wildcardClass73 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0d + "'", obj57, 1.0d);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0d + "'", obj58, 1.0d);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0d + "'", obj66, 0.0d);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1644");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver25.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver25.push(obj41);
        java.lang.Class<?> wildcardClass44 = stackTestDriver25.getClass();
        java.lang.Object obj45 = stackTestDriver17.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver17.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1645");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 0.0f);
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj66 = stackTestDriver50.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver67.push(obj78);
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) stackTestDriver67);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver20.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = stackTestDriver20.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0d + "'", obj49, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1646");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver21.push(obj27);
        java.lang.Object obj30 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver31.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj44 = stackTestDriver21.push(obj43);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver53.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = stackTestDriver21.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        stackTestDriver82.clear();
        java.lang.Object obj96 = stackTestDriver76.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj97 = stackTestDriver21.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) stackTestDriver82);
        stackTestDriver82.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1647");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass58 = stackTestDriver55.getClass();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj60 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1648");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Class<?> wildcardClass35 = stackTestDriver23.getClass();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1649");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass65 = stackTestDriver49.getClass();
        java.lang.Object obj66 = stackTestDriver34.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj67 = stackTestDriver34.pop();
        java.lang.Object obj68 = stackTestDriver29.push(obj67);
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver29);
        stackTestDriver29.clear();
        stackTestDriver29.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1650");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1651");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver0.pop();
        java.lang.Object obj63 = stackTestDriver0.pop();
        java.lang.Object obj64 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1652");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1653");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj80 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj81 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        stackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver82.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver66.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = stackTestDriver55.push(obj87);
        java.lang.Object obj89 = stackTestDriver14.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass90 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10.0f + "'", obj79, 10.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1654");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1655");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1656");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver24.push(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1657");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj78 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass80 = stackTestDriver26.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1658");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        stackTestDriver49.clear();
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) stackTestDriver49);
        stackTestDriver49.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1659");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver14.push(obj36);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver42.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver47.pop();
        java.lang.Class<?> wildcardClass55 = stackTestDriver47.getClass();
        java.lang.Object obj56 = stackTestDriver39.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj57 = stackTestDriver38.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj58 = stackTestDriver39.pop();
        java.lang.Object obj59 = stackTestDriver14.push(obj58);
        java.lang.Object obj60 = stackTestDriver14.pop();
        java.lang.Object obj61 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 1.0d);
        java.lang.Object obj81 = stackTestDriver74.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Object obj89 = stackTestDriver82.push((java.lang.Object) 0.0d);
        java.lang.Object obj91 = stackTestDriver82.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver74.push(obj91);
        stackTestDriver74.clear();
        java.lang.Object obj94 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj95 = stackTestDriver14.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj96 = stackTestDriver8.push(obj95);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0.0f + "'", obj78, 0.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0d + "'", obj80, 1.0d);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0d + "'", obj81, 1.0d);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 0.0d + "'", obj89, 0.0d);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1660");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj45 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj66 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj69 = stackTestDriver47.push((java.lang.Object) (-1L));
        stackTestDriver47.clear();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj73 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1661");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj77 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver33.pop();
        java.lang.Object obj79 = stackTestDriver33.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1662");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        java.lang.Object obj31 = stackTestDriver14.push(obj30);
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj36 = stackTestDriver14.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver37.pop();
        java.lang.Object obj54 = stackTestDriver14.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj55 = stackTestDriver8.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj78 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj79 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Object obj83 = stackTestDriver8.push((java.lang.Object) stackTestDriver64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = stackTestDriver64.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10.0f + "'", obj77, 10.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10.0f + "'", obj78, 10.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1663");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = stackTestDriver37.push((java.lang.Object) stackTestDriver52);
        java.lang.Class<?> wildcardClass75 = stackTestDriver52.getClass();
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver1.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1664");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver21.push((java.lang.Object) stackTestDriver46);
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver21.getClass();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass69 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1665");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver18.push(obj24);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj41 = stackTestDriver18.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver50.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj72 = stackTestDriver18.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Class<?> wildcardClass74 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1666");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = stackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1667");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj36 = stackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver30.push((java.lang.Object) false);
        java.lang.Object obj39 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver30.push(obj44);
        java.lang.Object obj46 = stackTestDriver25.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver25.push(obj54);
        stackTestDriver25.clear();
        java.lang.Object obj58 = stackTestDriver14.push((java.lang.Object) stackTestDriver25);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1668");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = stackTestDriver13.push((java.lang.Object) 10.0f);
        java.lang.Object obj21 = stackTestDriver7.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver22.push(obj41);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = stackTestDriver47.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj59 = stackTestDriver52.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver52.getClass();
        java.lang.Object obj61 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj62 = stackTestDriver22.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj63 = stackTestDriver7.push(obj62);
        java.lang.Object obj65 = stackTestDriver7.push((java.lang.Object) (short) -1);
        java.lang.Object obj66 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10.0f + "'", obj20, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) -1 + "'", obj65, (short) -1);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1669");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1670");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1671");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) (-1));
        stackTestDriver37.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver37.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1) + "'", obj60, (-1));
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1672");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj22 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass23 = stackTestDriver15.getClass();
        java.lang.Object obj24 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj25 = stackTestDriver6.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj26 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver32.push(obj46);
        java.lang.Object obj48 = stackTestDriver27.push(obj46);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver52.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass65 = stackTestDriver57.getClass();
        java.lang.Object obj66 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj67 = stackTestDriver27.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj68 = stackTestDriver7.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj69 = stackTestDriver7.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1673");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1674");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj69 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Float");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1675");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1676");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Class<?> wildcardClass21 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1677");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass65 = stackTestDriver49.getClass();
        java.lang.Object obj66 = stackTestDriver34.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj67 = stackTestDriver34.pop();
        java.lang.Object obj68 = stackTestDriver29.push(obj67);
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver29);
        java.lang.Class<?> wildcardClass70 = stackTestDriver29.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1678");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = stackTestDriver41.push((java.lang.Object) stackTestDriver46);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Class<?> wildcardClass55 = stackTestDriver46.getClass();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver46);
        stackTestDriver46.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1679");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver53.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj65 = stackTestDriver58.pop();
        java.lang.Class<?> wildcardClass66 = stackTestDriver58.getClass();
        java.lang.Object obj67 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj68 = stackTestDriver28.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj69 = stackTestDriver50.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj71 = stackTestDriver50.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1680");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        java.lang.Object obj50 = stackTestDriver34.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver34.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = stackTestDriver66.push(obj77);
        java.lang.Class<?> wildcardClass79 = stackTestDriver66.getClass();
        java.lang.Object obj80 = stackTestDriver51.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0d + "'", obj33, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1681");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = stackTestDriver0.push(obj44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1682");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1683");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj56 = stackTestDriver40.push((java.lang.Object) stackTestDriver47);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver40.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj71 = stackTestDriver40.pop();
        java.lang.Object obj72 = stackTestDriver40.pop();
        java.lang.Object obj73 = stackTestDriver18.push(obj72);
        stackTestDriver18.clear();
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        stackTestDriver81.clear();
        java.lang.Object obj87 = stackTestDriver81.push((java.lang.Object) 100L);
        java.lang.Object obj89 = stackTestDriver81.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver81.pop();
        experiment.drivers.StackTestDriver stackTestDriver91 = new experiment.drivers.StackTestDriver();
        stackTestDriver91.clear();
        java.lang.Object obj93 = new java.lang.Object();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        java.lang.Object obj95 = stackTestDriver91.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = stackTestDriver81.push(obj95);
        java.lang.Object obj97 = stackTestDriver76.push(obj95);
        java.lang.Object obj98 = stackTestDriver76.pop();
        java.lang.Object obj99 = stackTestDriver18.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0.0f + "'", obj80, 0.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 100L + "'", obj87, 100L);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + false + "'", obj90, false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.Object");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1684");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        stackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver14.push((java.lang.Object) wildcardClass17);
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj36 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver14.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj38 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver40.getClass();
        java.lang.Object obj54 = stackTestDriver22.push((java.lang.Object) stackTestDriver40);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj57 = stackTestDriver5.push((java.lang.Object) stackTestDriver22);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1685");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj71 = stackTestDriver55.push((java.lang.Object) stackTestDriver62);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        stackTestDriver72.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        stackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver79.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = stackTestDriver72.push(obj83);
        java.lang.Object obj85 = stackTestDriver55.push((java.lang.Object) stackTestDriver72);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj88 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver90.pop();
        java.lang.Object obj96 = stackTestDriver32.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj97 = stackTestDriver32.pop();
        java.lang.Object obj98 = stackTestDriver8.push(obj97);
        java.lang.Class<?> wildcardClass99 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1686");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1687");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver21.push((java.lang.Object) stackTestDriver46);
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver21.getClass();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1688");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj3 = stackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        java.lang.Object obj9 = stackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = stackTestDriver4.push((java.lang.Object) 0.0d);
        java.lang.Object obj13 = stackTestDriver4.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj27 = stackTestDriver4.push((java.lang.Object) stackTestDriver14);
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + "hi!" + "'", obj3, "hi!");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0d + "'", obj11, 0.0d);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1689");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        java.lang.Object obj89 = stackTestDriver78.push((java.lang.Object) (byte) -1);
        java.lang.Object obj90 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Class<?> wildcardClass92 = stackTestDriver78.getClass();
        java.lang.Object obj93 = stackTestDriver26.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = stackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) -1 + "'", obj89, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) -1 + "'", obj90, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1690");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj67 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        stackTestDriver43.clear();
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Class<?> wildcardClass72 = stackTestDriver43.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1691");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver33.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj45 = stackTestDriver38.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver38.getClass();
        java.lang.Object obj47 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj48 = stackTestDriver29.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj50 = stackTestDriver30.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        java.lang.Object obj60 = stackTestDriver30.push((java.lang.Object) stackTestDriver51);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver30);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) -1 + "'", obj50, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1692");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver68.push(obj74);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver78.push(obj92);
        java.lang.Object obj94 = stackTestDriver68.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj95 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj98 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass99 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1693");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver58.push(obj64);
        java.lang.Object obj67 = stackTestDriver58.pop();
        java.lang.Object obj68 = stackTestDriver24.push(obj67);
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1694");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj70 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        stackTestDriver58.clear();
        java.lang.Object obj72 = stackTestDriver52.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver73);
        stackTestDriver73.clear();
        java.lang.Object obj77 = stackTestDriver8.push((java.lang.Object) stackTestDriver73);
        stackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1695");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver20.push(obj76);
        java.lang.Object obj78 = stackTestDriver20.pop();
        java.lang.Object obj79 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1696");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = stackTestDriver15.push(obj21);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver25.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj38 = stackTestDriver15.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver39.push((java.lang.Object) stackTestDriver47);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver47.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = stackTestDriver15.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj70 = stackTestDriver47.pop();
        java.lang.Object obj71 = stackTestDriver8.push((java.lang.Object) stackTestDriver47);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver8.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj78 = stackTestDriver8.pop();
        java.lang.Object obj79 = stackTestDriver8.pop();
        java.lang.Object obj80 = stackTestDriver0.push(obj79);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1697");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj39 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj40 = stackTestDriver15.push(obj39);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) 0.0f);
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        java.lang.Object obj65 = stackTestDriver49.push((java.lang.Object) stackTestDriver56);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = stackTestDriver66.push(obj77);
        java.lang.Object obj79 = stackTestDriver49.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj80 = stackTestDriver42.push((java.lang.Object) stackTestDriver66);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        java.lang.Object obj83 = stackTestDriver15.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj84 = stackTestDriver15.pop();
        java.lang.Object obj85 = stackTestDriver0.push(obj84);
        java.lang.Object obj86 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0d + "'", obj48, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1698");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass27 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1699");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 0.0f);
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj66 = stackTestDriver50.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver67.push(obj78);
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) stackTestDriver67);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver20.push((java.lang.Object) wildcardClass82);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj91 = stackTestDriver84.push((java.lang.Object) 0.0d);
        java.lang.Object obj93 = stackTestDriver84.push((java.lang.Object) false);
        java.lang.Object obj94 = stackTestDriver84.pop();
        java.lang.Object obj95 = stackTestDriver20.push(obj94);
        java.lang.Object obj96 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass97 = stackTestDriver20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0d + "'", obj49, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) 10 + "'", obj89, (short) 10);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 0.0d + "'", obj91, 0.0d);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + false + "'", obj93, false);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + false + "'", obj94, false);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + false + "'", obj95, false);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + false + "'", obj96, false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1700");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj57 = stackTestDriver32.push(obj56);
        stackTestDriver32.clear();
        java.lang.Object obj59 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj60 = stackTestDriver24.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = stackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1701");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj77 = stackTestDriver26.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj78 = stackTestDriver0.push(obj77);
        java.lang.Object obj79 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1702");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass21 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1703");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver14.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj26 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass27 = stackTestDriver19.getClass();
        java.lang.Object obj28 = stackTestDriver11.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj29 = stackTestDriver10.push((java.lang.Object) stackTestDriver11);
        java.lang.Object obj30 = stackTestDriver11.pop();
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1704");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1705");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass39 = stackTestDriver31.getClass();
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0d + "'", obj38, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1706");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Class<?> wildcardClass17 = stackTestDriver16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1707");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1708");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        java.lang.Object obj41 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1709");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver68.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = stackTestDriver53.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass91 = stackTestDriver68.getClass();
        java.lang.Object obj92 = stackTestDriver38.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1710");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj72 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        java.lang.Class<?> wildcardClass74 = stackTestDriver58.getClass();
        java.lang.Object obj75 = stackTestDriver43.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj76 = stackTestDriver5.push(obj75);
        java.lang.Object obj77 = stackTestDriver5.pop();
        java.lang.Object obj78 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1711");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = stackTestDriver34.push((java.lang.Object) stackTestDriver39);
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver48.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj61 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj63 = stackTestDriver39.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj64 = stackTestDriver0.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver74.pop();
        java.lang.Object obj87 = stackTestDriver65.push(obj86);
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver65);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1712");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver55.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj67 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver60.getClass();
        java.lang.Object obj69 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj70 = stackTestDriver52.pop();
        java.lang.Object obj71 = stackTestDriver52.pop();
        java.lang.Object obj72 = stackTestDriver25.push((java.lang.Object) stackTestDriver52);
        java.lang.Class<?> wildcardClass73 = stackTestDriver25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1713");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver24.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Class<?> wildcardClass28 = stackTestDriver24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1714");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Object obj71 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = stackTestDriver75.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj87 = stackTestDriver80.pop();
        java.lang.Class<?> wildcardClass88 = stackTestDriver80.getClass();
        java.lang.Object obj89 = stackTestDriver72.push((java.lang.Object) stackTestDriver80);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver72);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1715");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 0.0f);
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 1.0d);
        java.lang.Object obj14 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        java.lang.Object obj26 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) "");
        java.lang.Object obj35 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj41 = stackTestDriver29.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj42 = stackTestDriver17.push(obj41);
        java.lang.Object obj43 = stackTestDriver7.push(obj42);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj45 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0d + "'", obj13, 1.0d);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0d + "'", obj14, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1716");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver67.getClass();
        java.lang.Object obj92 = stackTestDriver42.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj93 = stackTestDriver16.push(obj92);
        java.lang.Class<?> wildcardClass94 = stackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1717");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj13 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100.0d + "'", obj12, 100.0d);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100.0d + "'", obj13, 100.0d);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1718");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj56 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        java.lang.Object obj60 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1719");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj75 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj76 = stackTestDriver62.push((java.lang.Object) 10.0f);
        java.lang.Object obj77 = stackTestDriver54.push((java.lang.Object) stackTestDriver62);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver62.push((java.lang.Object) wildcardClass81);
        stackTestDriver62.clear();
        java.lang.Object obj86 = stackTestDriver62.push((java.lang.Object) 0.0f);
        java.lang.Object obj87 = stackTestDriver62.pop();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver0.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10.0f + "'", obj75, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10.0f + "'", obj76, 10.0f);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0.0f + "'", obj87, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Float");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1720");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        stackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) wildcardClass9);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass61 = stackTestDriver45.getClass();
        java.lang.Object obj62 = stackTestDriver30.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj63 = stackTestDriver14.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass64 = stackTestDriver14.getClass();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) wildcardClass64);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1721");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver26.push(obj32);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        java.lang.Object obj43 = stackTestDriver26.push(obj42);
        java.lang.Object obj44 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver26.getClass();
        java.lang.Object obj48 = stackTestDriver1.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj49 = stackTestDriver1.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1722");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1723");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver63.getClass();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver21.pop();
        java.lang.Object obj73 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1724");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj45 = stackTestDriver25.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver0.push(obj45);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) -1 + "'", obj45, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) -1 + "'", obj47, (byte) -1);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1725");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver13.push(obj32);
        java.lang.Object obj35 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver36.push(obj47);
        java.lang.Object obj49 = stackTestDriver13.push(obj47);
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        java.lang.Object obj53 = stackTestDriver13.push((java.lang.Object) 100.0f);
        java.lang.Object obj54 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0.0f + "'", obj17, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100.0f + "'", obj53, 100.0f);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1726");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1727");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj28 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver29.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver9.push((java.lang.Object) stackTestDriver29);
        stackTestDriver9.clear();
        java.lang.Object obj73 = stackTestDriver9.push((java.lang.Object) 0);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver75);
        java.lang.Object obj98 = stackTestDriver75.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0 + "'", obj74, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Object");
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1728");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        java.lang.Object obj51 = stackTestDriver45.push((java.lang.Object) 100L);
        java.lang.Object obj53 = stackTestDriver45.push((java.lang.Object) false);
        java.lang.Object obj54 = stackTestDriver45.pop();
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) (byte) -1);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        java.lang.Object obj60 = stackTestDriver17.push((java.lang.Object) stackTestDriver45);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver62.push((java.lang.Object) stackTestDriver67);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        stackTestDriver74.clear();
        stackTestDriver74.clear();
        java.lang.Object obj78 = stackTestDriver62.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj79 = stackTestDriver62.pop();
        java.lang.Object obj80 = stackTestDriver62.pop();
        java.lang.Object obj81 = stackTestDriver17.push(obj80);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) -1 + "'", obj56, (byte) -1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1729");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) (-1));
        stackTestDriver37.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj63 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1) + "'", obj60, (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1730");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        java.lang.Object obj89 = stackTestDriver78.push((java.lang.Object) (byte) -1);
        java.lang.Object obj90 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Class<?> wildcardClass92 = stackTestDriver78.getClass();
        java.lang.Object obj93 = stackTestDriver26.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) -1 + "'", obj89, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) -1 + "'", obj90, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1731");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1732");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        java.lang.Object obj91 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Short");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1733");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        stackTestDriver51.clear();
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        java.lang.Object obj73 = stackTestDriver51.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj75 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1734");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass45 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1735");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1736");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver9.push(obj15);
        java.lang.Object obj18 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0.0d + "'", obj8, 0.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1737");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj59 = stackTestDriver43.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        java.lang.Object obj61 = stackTestDriver20.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1738");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Object obj19 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver20.push(obj26);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj36 = stackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver30.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver30.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj43 = stackTestDriver20.push(obj42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj64 = stackTestDriver45.pop();
        java.lang.Object obj65 = stackTestDriver20.push(obj64);
        java.lang.Object obj66 = stackTestDriver0.push(obj65);
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1739");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        java.lang.Object obj61 = stackTestDriver45.push(obj60);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj64 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj65 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver37.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1740");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj63 = stackTestDriver54.push((java.lang.Object) false);
        stackTestDriver54.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver54.getClass();
        java.lang.Object obj66 = stackTestDriver8.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = stackTestDriver8.push(obj67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1741");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1742");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj34 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj35 = stackTestDriver10.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj35);
        java.lang.Object obj37 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1743");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1744");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1745");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1746");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver14.pop();
        java.lang.Object obj68 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Class<?> wildcardClass71 = stackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0d + "'", obj68, 0.0d);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1747");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) "");
        java.lang.Object obj37 = stackTestDriver26.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj38 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass39 = stackTestDriver31.getClass();
        java.lang.Object obj40 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj41 = stackTestDriver22.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj42 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        java.lang.Object obj57 = stackTestDriver48.pop();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver48.push(obj62);
        java.lang.Object obj64 = stackTestDriver43.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        java.lang.Object obj78 = stackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = stackTestDriver68.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj80 = stackTestDriver73.pop();
        java.lang.Class<?> wildcardClass81 = stackTestDriver73.getClass();
        java.lang.Object obj82 = stackTestDriver65.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj83 = stackTestDriver43.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj84 = stackTestDriver23.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj85 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj87 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1748");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj81 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj83 = stackTestDriver75.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj88 = stackTestDriver33.push((java.lang.Object) stackTestDriver75);
        stackTestDriver33.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = stackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1749");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        java.lang.Object obj50 = stackTestDriver34.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver34.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = stackTestDriver66.push(obj77);
        java.lang.Class<?> wildcardClass79 = stackTestDriver66.getClass();
        java.lang.Object obj80 = stackTestDriver51.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        stackTestDriver83.clear();
        stackTestDriver83.clear();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver83);
        java.lang.Class<?> wildcardClass89 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0d + "'", obj33, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1750");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver44.pop();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) stackTestDriver44);
        stackTestDriver44.clear();
        java.lang.Class<?> wildcardClass64 = stackTestDriver44.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1751");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj31 = stackTestDriver18.pop();
        java.lang.Object obj32 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj34 = stackTestDriver15.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver15.pop();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj37 = stackTestDriver15.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = stackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1752");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver57.pop();
        java.lang.Object obj75 = stackTestDriver57.push((java.lang.Object) 10);
        java.lang.Object obj76 = stackTestDriver57.pop();
        java.lang.Object obj77 = stackTestDriver10.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj78 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass79 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10 + "'", obj75, 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10 + "'", obj76, 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1753");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Object obj55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = stackTestDriver8.push(obj55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1754");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        java.lang.Object obj52 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj69 = stackTestDriver53.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        java.lang.Object obj86 = stackTestDriver30.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver30.pop();
        java.lang.Object obj88 = stackTestDriver20.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass90 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1755");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1756");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj45 = stackTestDriver25.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver0.push(obj45);
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) -1 + "'", obj45, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) -1 + "'", obj47, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1757");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver23.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj35 = stackTestDriver28.pop();
        java.lang.Class<?> wildcardClass36 = stackTestDriver28.getClass();
        java.lang.Object obj37 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj38 = stackTestDriver19.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj39 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj42 = stackTestDriver20.push((java.lang.Object) (-1L));
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver45.push(obj51);
        java.lang.Object obj54 = stackTestDriver45.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver55.pop();
        java.lang.Object obj62 = stackTestDriver45.push(obj61);
        java.lang.Object obj63 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver45.getClass();
        java.lang.Object obj67 = stackTestDriver20.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (-1L) + "'", obj42, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1758");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1759");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj78 = stackTestDriver0.pop();
        java.lang.Object obj79 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1760");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver21.push((java.lang.Object) stackTestDriver46);
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver21.getClass();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj69 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass70 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1761");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass51 = stackTestDriver43.getClass();
        java.lang.Object obj52 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj53 = stackTestDriver34.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj54 = stackTestDriver35.pop();
        java.lang.Object obj55 = stackTestDriver35.pop();
        java.lang.Class<?> wildcardClass56 = stackTestDriver35.getClass();
        java.lang.Object obj57 = stackTestDriver17.push((java.lang.Object) stackTestDriver35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = stackTestDriver35.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1762");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj41 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = stackTestDriver47.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj59 = stackTestDriver52.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver52.getClass();
        java.lang.Object obj61 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj62 = stackTestDriver43.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj63 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj66 = stackTestDriver44.push((java.lang.Object) (-1L));
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = stackTestDriver72.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj84 = stackTestDriver77.pop();
        java.lang.Class<?> wildcardClass85 = stackTestDriver77.getClass();
        java.lang.Object obj86 = stackTestDriver69.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj87 = stackTestDriver68.push((java.lang.Object) stackTestDriver69);
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj90 = stackTestDriver88.push((java.lang.Object) 1.0f);
        java.lang.Object obj91 = stackTestDriver88.pop();
        stackTestDriver88.clear();
        stackTestDriver88.clear();
        java.lang.Class<?> wildcardClass94 = stackTestDriver88.getClass();
        java.lang.Object obj95 = stackTestDriver68.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = stackTestDriver44.push(obj95);
        java.lang.Object obj97 = stackTestDriver23.push(obj96);
        stackTestDriver23.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1763");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj8 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass12 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0.0d + "'", obj8, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1764");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj76 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj80 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10 + "'", obj79, 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10 + "'", obj80, 10);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1765");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1766");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver50.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj72 = stackTestDriver35.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        java.lang.Object obj90 = stackTestDriver74.push(obj89);
        java.lang.Object obj91 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj93 = stackTestDriver50.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        java.lang.Object obj95 = stackTestDriver8.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + false + "'", obj90, false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1767");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Object obj64 = stackTestDriver21.pop();
        java.lang.Object obj65 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1768");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        java.lang.Object obj41 = stackTestDriver0.push((java.lang.Object) stackTestDriver31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver31.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1769");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver20.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver20.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Float");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1770");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Object obj53 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver55.push(obj61);
        java.lang.Object obj64 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver65.pop();
        java.lang.Object obj72 = stackTestDriver55.push(obj71);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj81 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj83 = stackTestDriver75.push((java.lang.Object) false);
        java.lang.Object obj84 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj86 = stackTestDriver55.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass87 = stackTestDriver75.getClass();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) wildcardClass87);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1771");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1772");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        stackTestDriver51.clear();
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        java.lang.Object obj73 = stackTestDriver51.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj75 = stackTestDriver0.pop();
        java.lang.Object obj76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = stackTestDriver0.push(obj76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1773");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1774");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1775");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        java.lang.Object obj48 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver49.push(obj60);
        java.lang.Object obj62 = stackTestDriver26.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver26.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj72 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1776");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj30 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass31 = stackTestDriver23.getClass();
        java.lang.Object obj32 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj33 = stackTestDriver14.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj34 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver40.push(obj54);
        java.lang.Object obj56 = stackTestDriver35.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver60.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj72 = stackTestDriver65.pop();
        java.lang.Class<?> wildcardClass73 = stackTestDriver65.getClass();
        java.lang.Object obj74 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj75 = stackTestDriver35.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj76 = stackTestDriver15.push((java.lang.Object) stackTestDriver35);
        stackTestDriver15.clear();
        java.lang.Object obj79 = stackTestDriver15.push((java.lang.Object) 0);
        java.lang.Object obj80 = stackTestDriver15.pop();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = stackTestDriver0.push(obj82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0 + "'", obj79, 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1777");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj29 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1778");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        java.lang.Object obj48 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver49.push(obj60);
        java.lang.Object obj62 = stackTestDriver26.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver26.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj72 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass76 = stackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1779");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver25.push(obj39);
        java.lang.Object obj41 = stackTestDriver20.push(obj39);
        java.lang.Object obj42 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver20.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1780");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj20 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj34 = stackTestDriver21.pop();
        java.lang.Object obj35 = stackTestDriver21.pop();
        java.lang.Object obj36 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass37 = stackTestDriver21.getClass();
        java.lang.Object obj38 = stackTestDriver16.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj39 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1781");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = stackTestDriver8.push((java.lang.Object) 0.0d);
        java.lang.Object obj17 = stackTestDriver8.push((java.lang.Object) false);
        java.lang.Object obj18 = stackTestDriver0.push(obj17);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        stackTestDriver19.clear();
        java.lang.Object obj22 = stackTestDriver19.push((java.lang.Object) 0L);
        java.lang.Class<?> wildcardClass23 = stackTestDriver19.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0L + "'", obj22, 0L);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1782");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver5.pop();
        java.lang.Object obj15 = stackTestDriver5.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1783");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        stackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) wildcardClass9);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass61 = stackTestDriver45.getClass();
        java.lang.Object obj62 = stackTestDriver30.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj63 = stackTestDriver14.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass64 = stackTestDriver14.getClass();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1784");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver0.push(obj21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1785");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1786");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Object obj71 = stackTestDriver54.push(obj70);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj76 = stackTestDriver54.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj83 = stackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Object obj85 = stackTestDriver77.push((java.lang.Object) false);
        java.lang.Object obj86 = stackTestDriver77.pop();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver77.push(obj91);
        java.lang.Object obj93 = stackTestDriver77.pop();
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver77.pop();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver77);
        stackTestDriver77.clear();
        stackTestDriver77.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1787");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver52.push(obj58);
        java.lang.Object obj61 = stackTestDriver52.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        java.lang.Object obj71 = stackTestDriver62.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver62.push(obj76);
        java.lang.Object obj78 = stackTestDriver52.push((java.lang.Object) stackTestDriver62);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj81 = stackTestDriver8.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj82 = stackTestDriver8.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1788");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver6.push((java.lang.Object) wildcardClass29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver52.push(obj71);
        java.lang.Object obj74 = stackTestDriver52.pop();
        java.lang.Object obj75 = stackTestDriver37.push(obj74);
        java.lang.Object obj76 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj77 = stackTestDriver6.push(obj76);
        stackTestDriver6.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1789");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj52 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver27.push(obj60);
        java.lang.Object obj62 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver27.push(obj67);
        java.lang.Object obj69 = stackTestDriver21.push(obj68);
        java.lang.Object obj70 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1790");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1791");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj49 = stackTestDriver33.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver50.push(obj61);
        java.lang.Object obj63 = stackTestDriver33.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj67 = stackTestDriver10.pop();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1792");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1793");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver41.push(obj47);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj64 = stackTestDriver41.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver66.pop();
        java.lang.Object obj86 = stackTestDriver41.push(obj85);
        java.lang.Object obj87 = stackTestDriver22.push(obj86);
        java.lang.Object obj88 = stackTestDriver22.pop();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1794");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1795");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1796");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        java.lang.Object obj56 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver57.push(obj63);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver67.pop();
        java.lang.Object obj74 = stackTestDriver57.push(obj73);
        stackTestDriver57.clear();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        stackTestDriver82.clear();
        stackTestDriver82.clear();
        java.lang.Object obj97 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj98 = stackTestDriver57.push(obj97);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1797");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj28 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver29.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver9.push((java.lang.Object) stackTestDriver29);
        stackTestDriver9.clear();
        java.lang.Object obj73 = stackTestDriver9.push((java.lang.Object) 0);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0 + "'", obj74, 0);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1798");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj57 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1799");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1800");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver0.pop();
        java.lang.Object obj67 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) -1 + "'", obj67, (short) -1);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1801");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1802");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver36.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver27.push(obj55);
        java.lang.Object obj57 = stackTestDriver27.pop();
        java.lang.Object obj58 = stackTestDriver0.push(obj57);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1803");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj78 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1804");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        java.lang.Object obj32 = stackTestDriver0.pop();
        java.lang.Object obj33 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1805");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1806");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass41 = stackTestDriver25.getClass();
        java.lang.Object obj42 = stackTestDriver10.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver43.push(obj49);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = stackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = stackTestDriver53.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver53.push(obj67);
        java.lang.Object obj69 = stackTestDriver43.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj70 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj83 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj84 = stackTestDriver43.push(obj83);
        java.lang.Object obj85 = stackTestDriver10.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj86 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1807");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1808");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver39.push(obj50);
        java.lang.Class<?> wildcardClass52 = stackTestDriver39.getClass();
        java.lang.Object obj53 = stackTestDriver24.push((java.lang.Object) wildcardClass52);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver54.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver24.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = stackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1809");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj68 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1810");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1811");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver63.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver63.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver63.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj76 = stackTestDriver63.pop();
        java.lang.Object obj77 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj79 = stackTestDriver60.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj80 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        stackTestDriver60.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1812");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1813");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = stackTestDriver41.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj74 = stackTestDriver67.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver61.push((java.lang.Object) 10.0f);
        java.lang.Object obj76 = stackTestDriver53.push((java.lang.Object) stackTestDriver61);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver61.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = stackTestDriver46.push((java.lang.Object) stackTestDriver61);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) (byte) 100);
        java.lang.Object obj91 = stackTestDriver84.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = stackTestDriver61.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = stackTestDriver8.push((java.lang.Object) wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10.0f + "'", obj75, 10.0f);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10.0f + "'", obj91, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Float");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1814");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1815");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1816");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj64 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver67.push(obj73);
        java.lang.Object obj76 = stackTestDriver67.pop();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = stackTestDriver77.pop();
        java.lang.Object obj84 = stackTestDriver67.push(obj83);
        java.lang.Object obj85 = stackTestDriver67.pop();
        java.lang.Object obj86 = stackTestDriver48.push((java.lang.Object) stackTestDriver67);
        java.lang.Class<?> wildcardClass87 = stackTestDriver67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1817");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        stackTestDriver34.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver34.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1818");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj94 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1819");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = stackTestDriver39.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver59.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = stackTestDriver44.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = stackTestDriver82.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver59.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver32.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj93 = stackTestDriver59.pop();
        java.lang.Object obj94 = stackTestDriver17.push((java.lang.Object) stackTestDriver59);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1820");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj56 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1821");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj18 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (byte) 100);
        java.lang.Object obj32 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj33 = stackTestDriver19.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver59.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver64.getClass();
        java.lang.Object obj73 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj74 = stackTestDriver34.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj75 = stackTestDriver19.push(obj74);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        java.lang.Object obj86 = stackTestDriver19.push(obj85);
        java.lang.Object obj87 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1822");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj58 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = stackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1823");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass48 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1824");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1825");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver24.pop();
        java.lang.Object obj40 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1826");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver53.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj65 = stackTestDriver58.pop();
        java.lang.Class<?> wildcardClass66 = stackTestDriver58.getClass();
        java.lang.Object obj67 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj68 = stackTestDriver28.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj69 = stackTestDriver50.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj71 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1827");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = stackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1828");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj21 = stackTestDriver0.pop();
        java.lang.Object obj22 = stackTestDriver0.pop();
        java.lang.Object obj23 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1829");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj31 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1830");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver5.pop();
        java.lang.Object obj15 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass61 = stackTestDriver45.getClass();
        java.lang.Object obj62 = stackTestDriver30.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj63 = stackTestDriver30.pop();
        java.lang.Object obj64 = stackTestDriver25.push(obj63);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        java.lang.Object obj82 = stackTestDriver66.push(obj81);
        java.lang.Object obj83 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj85 = stackTestDriver25.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj86 = stackTestDriver5.push(obj85);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1831");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1832");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj58 = stackTestDriver42.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver59.push(obj70);
        java.lang.Object obj72 = stackTestDriver42.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj73 = stackTestDriver35.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj74 = stackTestDriver26.push(obj73);
        java.lang.Object obj75 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        java.lang.Object obj90 = stackTestDriver76.push((java.lang.Object) (-1.0d));
        java.lang.Object obj91 = stackTestDriver26.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj92 = stackTestDriver26.pop();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0d + "'", obj41, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (-1.0d) + "'", obj90, (-1.0d));
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1833");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        java.lang.Object obj37 = stackTestDriver21.push((java.lang.Object) stackTestDriver28);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver38.push(obj49);
        java.lang.Object obj51 = stackTestDriver21.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj52 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1834");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass65 = stackTestDriver49.getClass();
        java.lang.Object obj66 = stackTestDriver34.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj67 = stackTestDriver34.pop();
        java.lang.Object obj68 = stackTestDriver29.push(obj67);
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj70 = stackTestDriver29.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver29.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1835");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver40.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver48.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = stackTestDriver32.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj71 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj84 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj85 = stackTestDriver18.push((java.lang.Object) stackTestDriver32);
        stackTestDriver18.clear();
        java.lang.Class<?> wildcardClass87 = stackTestDriver18.getClass();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        java.lang.Class<?> wildcardClass89 = stackTestDriver18.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1836");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0d + "'", obj11, 0.0d);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1837");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1838");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 1.0d);
        java.lang.Object obj17 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = stackTestDriver18.push((java.lang.Object) 0.0d);
        java.lang.Object obj27 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver10.push(obj27);
        stackTestDriver10.clear();
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver39.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj52 = stackTestDriver39.pop();
        java.lang.Object obj53 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj55 = stackTestDriver36.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver72.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj94 = stackTestDriver56.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj95 = stackTestDriver36.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj96 = stackTestDriver31.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj99 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0d + "'", obj17, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0d + "'", obj25, 0.0d);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1839");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj77 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1840");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        stackTestDriver33.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = stackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1841");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj52 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver27.push(obj60);
        java.lang.Object obj62 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver27.push(obj67);
        java.lang.Object obj69 = stackTestDriver21.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1842");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver56.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj69 = stackTestDriver46.push(obj68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj90 = stackTestDriver71.pop();
        java.lang.Object obj91 = stackTestDriver46.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        stackTestDriver0.clear();
        java.lang.Object obj94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver0.push(obj94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1843");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Object obj46 = stackTestDriver32.pop();
        java.lang.Object obj47 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj56 = stackTestDriver8.push(obj55);
        java.lang.Object obj57 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1844");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj28 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver29.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver9.push((java.lang.Object) stackTestDriver29);
        stackTestDriver9.clear();
        java.lang.Object obj73 = stackTestDriver9.push((java.lang.Object) 0);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver75);
        java.lang.Object obj98 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0 + "'", obj74, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1845");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 1.0d);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Object obj42 = stackTestDriver8.push(obj41);
        java.lang.Object obj43 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0d + "'", obj40, 1.0d);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0d + "'", obj41, 1.0d);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0d + "'", obj42, 1.0d);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0d + "'", obj43, 1.0d);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1846");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        java.lang.Object obj24 = stackTestDriver8.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (byte) 100);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver25.push(obj36);
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj39 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver54.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj67 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj69 = stackTestDriver45.push((java.lang.Object) stackTestDriver54);
        java.lang.Class<?> wildcardClass70 = stackTestDriver54.getClass();
        java.lang.Object obj71 = stackTestDriver25.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver25.pop();
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 0.0d);
        java.lang.Object obj83 = stackTestDriver74.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        stackTestDriver84.clear();
        java.lang.Object obj90 = stackTestDriver84.push((java.lang.Object) 100L);
        java.lang.Object obj92 = stackTestDriver84.push((java.lang.Object) false);
        java.lang.Object obj94 = stackTestDriver84.push((java.lang.Object) 100L);
        java.lang.Object obj95 = stackTestDriver84.pop();
        stackTestDriver84.clear();
        java.lang.Object obj97 = stackTestDriver74.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj98 = stackTestDriver25.push((java.lang.Object) stackTestDriver84);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0d + "'", obj81, 0.0d);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 100L + "'", obj94, 100L);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1847");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = stackTestDriver11.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver25.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj38 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj40 = stackTestDriver16.push((java.lang.Object) stackTestDriver25);
        stackTestDriver16.clear();
        java.lang.Object obj42 = stackTestDriver0.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1848");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj52 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1849");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1850");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj95 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1851");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver20.push(obj76);
        java.lang.Object obj78 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Object obj82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = stackTestDriver20.push(obj82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1852");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1853");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver57.pop();
        java.lang.Object obj75 = stackTestDriver57.push((java.lang.Object) 10);
        java.lang.Object obj76 = stackTestDriver57.pop();
        java.lang.Object obj77 = stackTestDriver10.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj78 = stackTestDriver10.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10 + "'", obj75, 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10 + "'", obj76, 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1854");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver50.push((java.lang.Object) 1);
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj62 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1 + "'", obj62, 1);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1855");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        stackTestDriver32.clear();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver37.push((java.lang.Object) 10.0f);
        stackTestDriver37.clear();
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj54 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1856");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass18 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1857");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        stackTestDriver5.clear();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = stackTestDriver5.push((java.lang.Object) wildcardClass8);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = stackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = stackTestDriver13.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver13);
        stackTestDriver13.clear();
        java.lang.Class<?> wildcardClass34 = stackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10.0f + "'", obj26, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1858");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj75 = stackTestDriver59.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver76.push(obj87);
        java.lang.Object obj89 = stackTestDriver59.push((java.lang.Object) stackTestDriver76);
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver76);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1859");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = stackTestDriver34.push((java.lang.Object) stackTestDriver39);
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver48.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj61 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj63 = stackTestDriver39.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj64 = stackTestDriver0.push(obj63);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1860");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver14);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1861");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj8 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (-1L) + "'", obj7, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1862");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj64 = stackTestDriver48.push((java.lang.Object) stackTestDriver55);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        stackTestDriver65.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver65.push(obj76);
        java.lang.Object obj78 = stackTestDriver48.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj79 = stackTestDriver41.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj80 = stackTestDriver32.push(obj79);
        java.lang.Object obj81 = stackTestDriver17.push(obj79);
        java.lang.Object obj82 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0d + "'", obj47, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1863");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj31 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass32 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1864");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) 0.0f);
        stackTestDriver47.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver47.getClass();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver60.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj72 = stackTestDriver65.pop();
        java.lang.Class<?> wildcardClass73 = stackTestDriver65.getClass();
        java.lang.Object obj74 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj75 = stackTestDriver56.push((java.lang.Object) stackTestDriver57);
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver56.getClass();
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) stackTestDriver56);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1865");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        stackTestDriver0.clear();
        java.lang.Object obj43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = stackTestDriver0.push(obj43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1866");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        java.lang.Object obj44 = stackTestDriver28.push((java.lang.Object) stackTestDriver35);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver35.getClass();
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) stackTestDriver35);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1867");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = stackTestDriver20.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj60 = stackTestDriver0.pop();
        java.lang.Object obj61 = stackTestDriver0.pop();
        java.lang.Object obj62 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0d + "'", obj27, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1868");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1869");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver55.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj67 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver60.getClass();
        java.lang.Object obj69 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj70 = stackTestDriver52.pop();
        java.lang.Object obj71 = stackTestDriver52.pop();
        java.lang.Object obj72 = stackTestDriver25.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj73 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1870");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        java.lang.Object obj50 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) "");
        java.lang.Object obj64 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        java.lang.Object obj67 = stackTestDriver51.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver68.push(obj79);
        java.lang.Object obj81 = stackTestDriver51.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj84 = stackTestDriver28.push((java.lang.Object) stackTestDriver68);
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver86.pop();
        java.lang.Object obj92 = stackTestDriver28.push((java.lang.Object) stackTestDriver86);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver0.pop();
        java.lang.Object obj96 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 1.0f + "'", obj96, 1.0f);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1871");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver8.push((java.lang.Object) (short) 10);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver35.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj47 = stackTestDriver35.pop();
        java.lang.Object obj48 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj49 = stackTestDriver0.push(obj48);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1872");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass41 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1873");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) (-1.0d));
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver22.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj61 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        java.lang.Object obj71 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj74 = stackTestDriver22.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj75 = stackTestDriver22.pop();
        java.lang.Object obj76 = stackTestDriver15.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        java.lang.Class<?> wildcardClass88 = stackTestDriver78.getClass();
        java.lang.Object obj89 = stackTestDriver0.push((java.lang.Object) stackTestDriver78);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0d + "'", obj29, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1874");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver50.push(obj56);
        java.lang.Object obj59 = stackTestDriver50.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        java.lang.Object obj67 = stackTestDriver50.push(obj66);
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.String");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1875");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass41 = stackTestDriver25.getClass();
        java.lang.Object obj42 = stackTestDriver10.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver43.push(obj49);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = stackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = stackTestDriver53.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver53.push(obj67);
        java.lang.Object obj69 = stackTestDriver43.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj70 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj83 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj84 = stackTestDriver43.push(obj83);
        java.lang.Object obj85 = stackTestDriver10.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj86 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass89 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1876");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        stackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1877");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Class<?> wildcardClass23 = stackTestDriver10.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1878");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1879");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver52.push(obj58);
        java.lang.Object obj61 = stackTestDriver52.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        java.lang.Object obj71 = stackTestDriver62.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver62.push(obj76);
        java.lang.Object obj78 = stackTestDriver52.push((java.lang.Object) stackTestDriver62);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj81 = stackTestDriver8.push((java.lang.Object) stackTestDriver62);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1880");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1881");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        java.lang.Object obj45 = stackTestDriver36.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver36.push(obj50);
        java.lang.Object obj52 = stackTestDriver31.push(obj50);
        java.lang.Object obj53 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        java.lang.Object obj70 = stackTestDriver54.push((java.lang.Object) stackTestDriver61);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (byte) 100);
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver71.push(obj82);
        java.lang.Object obj84 = stackTestDriver54.push((java.lang.Object) stackTestDriver71);
        stackTestDriver71.clear();
        stackTestDriver71.clear();
        java.lang.Object obj87 = stackTestDriver31.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj88 = stackTestDriver31.pop();
        java.lang.Object obj89 = stackTestDriver21.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj90 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (byte) 100 + "'", obj76, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1882");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver17.pop();
        java.lang.Object obj31 = stackTestDriver17.pop();
        java.lang.Object obj32 = stackTestDriver17.pop();
        java.lang.Object obj33 = stackTestDriver12.push(obj32);
        java.lang.Object obj34 = stackTestDriver12.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = stackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1883");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        java.lang.Object obj21 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = stackTestDriver27.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj81 = stackTestDriver65.push((java.lang.Object) stackTestDriver72);
        stackTestDriver72.clear();
        java.lang.Object obj83 = stackTestDriver42.push((java.lang.Object) stackTestDriver72);
        java.lang.Class<?> wildcardClass84 = stackTestDriver72.getClass();
        java.lang.Object obj85 = stackTestDriver1.push((java.lang.Object) wildcardClass84);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1884");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        java.lang.Object obj41 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1885");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        java.lang.Object obj50 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver28.push(obj62);
        java.lang.Class<?> wildcardClass65 = stackTestDriver28.getClass();
        java.lang.Object obj66 = stackTestDriver15.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj68 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1886");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj77 = stackTestDriver63.push((java.lang.Object) 10.0f);
        java.lang.Object obj78 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj80 = stackTestDriver55.push((java.lang.Object) (short) 10);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj89 = stackTestDriver87.push((java.lang.Object) 1.0f);
        java.lang.Object obj90 = stackTestDriver87.pop();
        java.lang.Object obj92 = stackTestDriver87.push((java.lang.Object) "");
        java.lang.Object obj93 = stackTestDriver82.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj94 = stackTestDriver82.pop();
        java.lang.Object obj95 = stackTestDriver55.push((java.lang.Object) stackTestDriver82);
        stackTestDriver55.clear();
        java.lang.Class<?> wildcardClass97 = stackTestDriver55.getClass();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (byte) 100 + "'", obj74, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10.0f + "'", obj76, 10.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10.0f + "'", obj77, 10.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "" + "'", obj92, "");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1887");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj33 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1888");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        java.lang.Object obj64 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) (byte) -1);
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver72.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver80.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (byte) -1 + "'", obj91, (byte) -1);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1889");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj31 = stackTestDriver18.pop();
        java.lang.Object obj32 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj34 = stackTestDriver15.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver15.pop();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj37 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj61 = stackTestDriver45.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) (byte) 100);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver62.push(obj73);
        java.lang.Object obj75 = stackTestDriver45.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj76 = stackTestDriver38.push((java.lang.Object) stackTestDriver62);
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) (byte) 100);
        java.lang.Object obj86 = stackTestDriver79.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver38.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver15.push((java.lang.Object) stackTestDriver38);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0d + "'", obj44, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1890");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj71 = stackTestDriver55.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj72 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver40.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1891");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        java.lang.Object obj14 = stackTestDriver8.push((java.lang.Object) 100L);
        java.lang.Object obj16 = stackTestDriver8.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver8.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj21 = stackTestDriver8.pop();
        java.lang.Object obj22 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        java.lang.Object obj24 = stackTestDriver5.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = stackTestDriver25.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj63 = stackTestDriver25.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj64 = stackTestDriver5.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj66 = stackTestDriver5.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0d + "'", obj32, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1892");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        java.lang.Object obj20 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver21.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver41.getClass();
        java.lang.Object obj48 = stackTestDriver21.push((java.lang.Object) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = stackTestDriver21.getClass();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1893");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver2 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj4 = stackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = stackTestDriver2.getClass();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) stackTestDriver2);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1894");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1895");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver9.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj35 = stackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = stackTestDriver29.push((java.lang.Object) false);
        java.lang.Object obj38 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver29.push(obj43);
        java.lang.Object obj45 = stackTestDriver24.push(obj43);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver24.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver9.push(obj64);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver69.push(obj75);
        java.lang.Object obj78 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        java.lang.Object obj80 = stackTestDriver9.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Class<?> wildcardClass82 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1896");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver13.push(obj27);
        java.lang.Object obj29 = stackTestDriver8.push(obj27);
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj27);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1897");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass20 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1898");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        stackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) wildcardClass21);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj41 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj43 = stackTestDriver18.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver18.push(obj51);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = stackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = stackTestDriver53.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver53.push(obj67);
        java.lang.Object obj69 = stackTestDriver18.push(obj68);
        java.lang.Object obj70 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass76 = stackTestDriver73.getClass();
        java.lang.Object obj77 = stackTestDriver71.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj78 = stackTestDriver18.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj79 = stackTestDriver18.pop();
        java.lang.Object obj80 = stackTestDriver18.pop();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1899");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = stackTestDriver13.push((java.lang.Object) 10.0f);
        java.lang.Object obj21 = stackTestDriver7.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver22.push(obj41);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = stackTestDriver47.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj59 = stackTestDriver52.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver52.getClass();
        java.lang.Object obj61 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj62 = stackTestDriver22.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj63 = stackTestDriver7.push(obj62);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10.0f + "'", obj20, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1900");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1901");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1902");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver73.push(obj79);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver83.pop();
        java.lang.Object obj90 = stackTestDriver73.push(obj89);
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        java.lang.Object obj94 = stackTestDriver5.push((java.lang.Object) stackTestDriver73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver73.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1903");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass24 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1904");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj52 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver27.push(obj60);
        java.lang.Object obj62 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver27.push(obj67);
        java.lang.Object obj69 = stackTestDriver21.push(obj68);
        java.lang.Object obj70 = stackTestDriver21.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1905");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj49 = stackTestDriver33.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver50.push(obj61);
        java.lang.Object obj63 = stackTestDriver33.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj67 = stackTestDriver10.pop();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1906");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = stackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1907");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj86 = stackTestDriver66.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        java.lang.Object obj96 = stackTestDriver66.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj97 = stackTestDriver21.push((java.lang.Object) stackTestDriver66);
        stackTestDriver66.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = stackTestDriver66.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) -1 + "'", obj86, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1908");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        stackTestDriver51.clear();
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        java.lang.Object obj73 = stackTestDriver51.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj75 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1909");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass51 = stackTestDriver43.getClass();
        java.lang.Object obj52 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj53 = stackTestDriver34.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj54 = stackTestDriver35.pop();
        java.lang.Object obj55 = stackTestDriver35.pop();
        java.lang.Class<?> wildcardClass56 = stackTestDriver35.getClass();
        java.lang.Object obj57 = stackTestDriver17.push((java.lang.Object) stackTestDriver35);
        java.lang.Class<?> wildcardClass58 = stackTestDriver35.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1910");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        java.lang.Object obj19 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = stackTestDriver20.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj59 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = stackTestDriver60.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj72 = stackTestDriver20.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver0.push(obj72);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0d + "'", obj27, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1911");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver64.push(obj70);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = stackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = stackTestDriver74.pop();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver74.push(obj88);
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass91 = stackTestDriver74.getClass();
        java.lang.Object obj92 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1912");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        java.lang.Object obj41 = stackTestDriver0.push((java.lang.Object) stackTestDriver31);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1913");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Object obj20 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1914");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj15 = stackTestDriver0.pop();
        java.lang.Object obj16 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj57 = stackTestDriver50.pop();
        java.lang.Class<?> wildcardClass58 = stackTestDriver50.getClass();
        java.lang.Object obj59 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj60 = stackTestDriver41.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj61 = stackTestDriver17.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj62 = stackTestDriver42.pop();
        java.lang.Object obj63 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver42.getClass();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) wildcardClass64);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 10.0f + "'", obj15, 10.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1915");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = stackTestDriver24.push((java.lang.Object) 10.0f);
        java.lang.Object obj32 = stackTestDriver18.push((java.lang.Object) 10.0f);
        java.lang.Object obj33 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj34 = stackTestDriver18.pop();
        java.lang.Object obj35 = stackTestDriver0.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1916");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = stackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1917");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) "");
        java.lang.Object obj84 = stackTestDriver73.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj85 = stackTestDriver73.pop();
        java.lang.Object obj86 = stackTestDriver64.push(obj85);
        java.lang.Object obj87 = stackTestDriver0.push(obj86);
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1918");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver12.push(obj17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1919");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1920");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver9.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj21 = stackTestDriver9.pop();
        java.lang.Object obj22 = stackTestDriver0.push(obj21);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1921");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver44.pop();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj63 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1922");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1923");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver66.pop();
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1924");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver0.pop();
        java.lang.Object obj66 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1925");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 1.0d);
        java.lang.Object obj17 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = stackTestDriver18.push((java.lang.Object) 0.0d);
        java.lang.Object obj27 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver10.push(obj27);
        stackTestDriver10.clear();
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver39.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj52 = stackTestDriver39.pop();
        java.lang.Object obj53 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj55 = stackTestDriver36.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver72.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj94 = stackTestDriver56.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj95 = stackTestDriver36.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj96 = stackTestDriver31.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        java.lang.Class<?> wildcardClass99 = stackTestDriver36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0d + "'", obj17, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0d + "'", obj25, 0.0d);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1926");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        java.lang.Object obj45 = stackTestDriver36.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver36.push(obj50);
        java.lang.Object obj52 = stackTestDriver31.push(obj50);
        java.lang.Object obj53 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        java.lang.Object obj70 = stackTestDriver54.push((java.lang.Object) stackTestDriver61);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (byte) 100);
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver71.push(obj82);
        java.lang.Object obj84 = stackTestDriver54.push((java.lang.Object) stackTestDriver71);
        stackTestDriver71.clear();
        stackTestDriver71.clear();
        java.lang.Object obj87 = stackTestDriver31.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj88 = stackTestDriver31.pop();
        java.lang.Object obj89 = stackTestDriver21.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj90 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass91 = stackTestDriver21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (byte) 100 + "'", obj76, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1927");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj39 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        stackTestDriver27.clear();
        java.lang.Object obj41 = stackTestDriver21.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj42 = stackTestDriver21.pop();
        java.lang.Object obj43 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1928");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = stackTestDriver9.push((java.lang.Object) false);
        java.lang.Object obj18 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        stackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) wildcardClass22);
        java.lang.Object obj24 = stackTestDriver9.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push(obj23);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1929");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1930");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver39.push(obj58);
        java.lang.Object obj61 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) (byte) 100);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver62.push(obj73);
        java.lang.Object obj75 = stackTestDriver39.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver39.push((java.lang.Object) stackTestDriver76);
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        java.lang.Class<?> wildcardClass85 = stackTestDriver76.getClass();
        java.lang.Object obj86 = stackTestDriver8.push((java.lang.Object) stackTestDriver76);
        java.lang.Class<?> wildcardClass87 = stackTestDriver76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1931");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver5.push((java.lang.Object) 1);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver16.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = stackTestDriver57.push((java.lang.Object) 0.0d);
        java.lang.Object obj66 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass67 = stackTestDriver57.getClass();
        java.lang.Object obj68 = stackTestDriver16.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver5.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        stackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0d + "'", obj64, 0.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1932");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 0.0f);
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj54 = stackTestDriver38.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver38.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj69 = stackTestDriver31.push((java.lang.Object) stackTestDriver55);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        java.lang.Object obj72 = stackTestDriver8.push((java.lang.Object) stackTestDriver31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = stackTestDriver31.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0d + "'", obj37, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1933");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj34 = stackTestDriver31.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver8.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "hi!" + "'", obj34, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.String");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.String");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1934");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj41 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj45 = stackTestDriver42.push((java.lang.Object) "hi!");
        java.lang.Object obj46 = stackTestDriver22.push((java.lang.Object) stackTestDriver42);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1935");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Class<?> wildcardClass51 = stackTestDriver45.getClass();
        java.lang.Object obj52 = stackTestDriver25.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver1.push(obj52);
        java.lang.Object obj54 = stackTestDriver1.pop();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1936");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver9.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj21 = stackTestDriver9.pop();
        java.lang.Object obj22 = stackTestDriver0.push(obj21);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (-1));
        java.lang.Object obj38 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = stackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1) + "'", obj37, (-1));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1) + "'", obj38, (-1));
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1937");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver23.pop();
        java.lang.Object obj37 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        java.lang.Object obj43 = stackTestDriver23.push((java.lang.Object) 0.0f);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        java.lang.Object obj75 = stackTestDriver69.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver69.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver69.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj82 = stackTestDriver69.pop();
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj84 = stackTestDriver69.pop();
        java.lang.Object obj85 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        java.lang.Object obj87 = stackTestDriver23.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        java.lang.Object obj89 = stackTestDriver0.push((java.lang.Object) stackTestDriver69);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1938");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Object obj54 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1939");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Object obj19 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver20.push(obj26);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj36 = stackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver30.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver30.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj43 = stackTestDriver20.push(obj42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj64 = stackTestDriver45.pop();
        java.lang.Object obj65 = stackTestDriver20.push(obj64);
        java.lang.Object obj66 = stackTestDriver0.push(obj65);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1940");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1941");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) (byte) -1);
        java.lang.Object obj58 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver25.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver62.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver76.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj89 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver67.push((java.lang.Object) stackTestDriver76);
        stackTestDriver67.clear();
        java.lang.Object obj93 = stackTestDriver25.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver67);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) -1 + "'", obj57, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1942");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = stackTestDriver37.push((java.lang.Object) stackTestDriver52);
        java.lang.Class<?> wildcardClass75 = stackTestDriver52.getClass();
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver1.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = stackTestDriver1.pop();
        java.lang.Object obj79 = stackTestDriver1.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) -1 + "'", obj79, (byte) -1);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1943");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        stackTestDriver48.clear();
        stackTestDriver48.clear();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Object obj69 = stackTestDriver62.push((java.lang.Object) 10.0f);
        java.lang.Object obj70 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj71 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Class<?> wildcardClass72 = stackTestDriver56.getClass();
        java.lang.Object obj73 = stackTestDriver41.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj74 = stackTestDriver41.pop();
        java.lang.Object obj75 = stackTestDriver36.push(obj74);
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        java.lang.Object obj89 = stackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver83.pop();
        java.lang.Object obj93 = stackTestDriver77.push(obj92);
        java.lang.Object obj94 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj96 = stackTestDriver36.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj97 = stackTestDriver0.push(obj96);
        java.lang.Class<?> wildcardClass98 = obj96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10.0f + "'", obj69, 10.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 10.0f + "'", obj70, 10.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + false + "'", obj93, false);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + false + "'", obj94, false);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1944");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj76 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1945");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver25.push(obj39);
        java.lang.Object obj41 = stackTestDriver20.push(obj39);
        java.lang.Object obj42 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj59 = stackTestDriver43.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver60.push(obj71);
        java.lang.Object obj73 = stackTestDriver43.push((java.lang.Object) stackTestDriver60);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj76 = stackTestDriver20.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj77 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        stackTestDriver78.clear();
        stackTestDriver78.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Object obj86 = stackTestDriver78.push(obj85);
        java.lang.Object obj87 = stackTestDriver20.push(obj85);
        java.lang.Class<?> wildcardClass88 = stackTestDriver20.getClass();
        java.lang.Object obj89 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1946");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Object obj46 = stackTestDriver32.pop();
        java.lang.Object obj47 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Class<?> wildcardClass57 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1947");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver26.pop();
        java.lang.Object obj40 = stackTestDriver26.pop();
        java.lang.Object obj41 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Class<?> wildcardClass43 = stackTestDriver26.getClass();
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1948");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass83 = stackTestDriver63.getClass();
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1949");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        java.lang.Object obj58 = stackTestDriver16.push((java.lang.Object) stackTestDriver34);
        java.lang.Class<?> wildcardClass59 = stackTestDriver34.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1950");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 1.0d);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver23.push(obj29);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver23.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj50 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver23.push(obj63);
        java.lang.Object obj65 = stackTestDriver15.push(obj64);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = stackTestDriver66.getClass();
        java.lang.Object obj73 = stackTestDriver15.push((java.lang.Object) wildcardClass72);
        stackTestDriver15.clear();
        java.lang.Class<?> wildcardClass75 = stackTestDriver15.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1951");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver32.pop();
        java.lang.Object obj39 = stackTestDriver22.push(obj38);
        java.lang.Object obj40 = stackTestDriver22.pop();
        java.lang.Object obj41 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        java.lang.Class<?> wildcardClass46 = stackTestDriver42.getClass();
        java.lang.Object obj47 = stackTestDriver22.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj48 = stackTestDriver5.push(obj47);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1952");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1953");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        java.lang.Object obj68 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1954");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1955");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver31.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj58 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj72 = stackTestDriver31.push(obj71);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Object obj74 = stackTestDriver0.pop();
        java.lang.Object obj75 = stackTestDriver0.pop();
        java.lang.Object obj76 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1956");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1957");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass37 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1958");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj57 = stackTestDriver44.pop();
        java.lang.Object obj58 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver59.push(obj78);
        java.lang.Object obj81 = stackTestDriver59.pop();
        java.lang.Object obj82 = stackTestDriver44.push(obj81);
        java.lang.Object obj83 = stackTestDriver38.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj84 = stackTestDriver38.pop();
        java.lang.Object obj85 = stackTestDriver0.push((java.lang.Object) stackTestDriver38);
        stackTestDriver38.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1959");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1960");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver14.pop();
        java.lang.Object obj68 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver72.push(obj78);
        java.lang.Object obj81 = stackTestDriver72.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        java.lang.Object obj89 = stackTestDriver72.push(obj88);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Class<?> wildcardClass93 = stackTestDriver72.getClass();
        java.lang.Object obj94 = stackTestDriver14.push((java.lang.Object) stackTestDriver72);
        stackTestDriver72.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0d + "'", obj68, 0.0d);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1961");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj56 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        java.lang.Object obj60 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1962");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1963");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) (byte) -1);
        java.lang.Object obj58 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver25.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver62.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver76.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj89 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver67.push((java.lang.Object) stackTestDriver76);
        stackTestDriver67.clear();
        java.lang.Object obj93 = stackTestDriver25.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass98 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) -1 + "'", obj57, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1964");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        stackTestDriver3.clear();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        java.lang.Object obj7 = stackTestDriver3.push((java.lang.Object) wildcardClass6);
        stackTestDriver3.clear();
        stackTestDriver3.clear();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Object obj16 = stackTestDriver11.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = stackTestDriver17.push((java.lang.Object) 10.0f);
        java.lang.Object obj25 = stackTestDriver11.push((java.lang.Object) 10.0f);
        java.lang.Object obj26 = stackTestDriver3.push((java.lang.Object) stackTestDriver11);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = stackTestDriver11.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj33 = stackTestDriver0.push(obj32);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1965");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Object obj20 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj34 = stackTestDriver21.pop();
        java.lang.Object obj35 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) 0.0f);
        java.lang.Object obj41 = stackTestDriver21.push((java.lang.Object) 0.0f);
        java.lang.Object obj42 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver49.push(obj63);
        java.lang.Object obj65 = stackTestDriver44.push(obj63);
        java.lang.Object obj66 = stackTestDriver21.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0.0f + "'", obj40, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0.0f + "'", obj41, 0.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0.0f + "'", obj48, 0.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1966");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver28.push(obj42);
        java.lang.Object obj44 = stackTestDriver23.push(obj42);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1967");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1968");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj34 = stackTestDriver31.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver8.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver8.pop();
        java.lang.Object obj38 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "hi!" + "'", obj34, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.String");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.String");
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1969");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1970");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        java.lang.Class<?> wildcardClass34 = stackTestDriver10.getClass();
        java.lang.Object obj35 = stackTestDriver0.push((java.lang.Object) wildcardClass34);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1971");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) (byte) -1);
        stackTestDriver13.clear();
        java.lang.Object obj26 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        java.lang.Object obj78 = stackTestDriver73.push((java.lang.Object) (byte) 100);
        java.lang.Object obj80 = stackTestDriver73.push((java.lang.Object) 10.0f);
        java.lang.Object obj81 = stackTestDriver67.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Class<?> wildcardClass83 = stackTestDriver67.getClass();
        java.lang.Object obj84 = stackTestDriver52.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj85 = stackTestDriver36.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj86 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj88 = stackTestDriver13.push((java.lang.Object) stackTestDriver52);
        stackTestDriver52.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) -1 + "'", obj24, (byte) -1);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1972");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) (byte) -1);
        stackTestDriver18.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj32 = stackTestDriver0.pop();
        java.lang.Object obj33 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) -1 + "'", obj29, (byte) -1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1973");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        java.lang.Object obj37 = stackTestDriver8.push((java.lang.Object) stackTestDriver25);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1974");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        java.lang.Object obj52 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj69 = stackTestDriver53.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        java.lang.Object obj86 = stackTestDriver30.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver30.pop();
        java.lang.Object obj88 = stackTestDriver20.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1975");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1976");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass75 = stackTestDriver68.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver0.pop();
        java.lang.Object obj78 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass79 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1977");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1978");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver14.pop();
        java.lang.Object obj68 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj71 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0d + "'", obj68, 0.0d);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1979");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        stackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver4.push((java.lang.Object) wildcardClass7);
        stackTestDriver4.clear();
        stackTestDriver4.clear();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        java.lang.Object obj25 = stackTestDriver18.push((java.lang.Object) 10.0f);
        java.lang.Object obj26 = stackTestDriver12.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = stackTestDriver4.push((java.lang.Object) stackTestDriver12);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver12.push((java.lang.Object) wildcardClass31);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver38.push(obj44);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        java.lang.Object obj57 = stackTestDriver48.pop();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver48.push(obj62);
        java.lang.Object obj64 = stackTestDriver38.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj65 = stackTestDriver48.pop();
        java.lang.Object obj66 = stackTestDriver12.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj78 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        java.lang.Object obj81 = stackTestDriver48.push((java.lang.Object) stackTestDriver70);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10.0f + "'", obj26, 10.0f);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0.0d + "'", obj78, 0.0d);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1980");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) 0.0f);
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 1.0d);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver31.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj58 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj72 = stackTestDriver31.push(obj71);
        java.lang.Object obj73 = stackTestDriver23.push(obj72);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        stackTestDriver74.clear();
        java.lang.Class<?> wildcardClass80 = stackTestDriver74.getClass();
        java.lang.Object obj81 = stackTestDriver23.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver23.pop();
        java.lang.Object obj83 = stackTestDriver0.push(obj82);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0d + "'", obj29, 1.0d);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1981");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        java.lang.Object obj65 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = stackTestDriver82.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj91 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        stackTestDriver68.clear();
        java.lang.Object obj93 = stackTestDriver56.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj94 = stackTestDriver56.pop();
        java.lang.Object obj95 = stackTestDriver14.push((java.lang.Object) stackTestDriver56);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10.0f + "'", obj90, 10.0f);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1982");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj57 = stackTestDriver44.pop();
        java.lang.Object obj58 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver59.push(obj78);
        java.lang.Object obj81 = stackTestDriver59.pop();
        java.lang.Object obj82 = stackTestDriver44.push(obj81);
        java.lang.Object obj83 = stackTestDriver38.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj84 = stackTestDriver38.pop();
        java.lang.Object obj85 = stackTestDriver0.push((java.lang.Object) stackTestDriver38);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1983");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver32.push(obj38);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver42.pop();
        java.lang.Object obj49 = stackTestDriver32.push(obj48);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        java.lang.Object obj54 = stackTestDriver32.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver55.push(obj69);
        java.lang.Object obj71 = stackTestDriver55.pop();
        java.lang.Object obj72 = stackTestDriver32.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj73 = stackTestDriver26.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass74 = stackTestDriver26.getClass();
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1L + "'", obj54, 1L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1984");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = stackTestDriver26.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj65 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj72 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver66.push((java.lang.Object) false);
        java.lang.Object obj75 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj78 = stackTestDriver26.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj79 = stackTestDriver12.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj80 = stackTestDriver26.pop();
        java.lang.Object obj81 = stackTestDriver0.push(obj80);
        java.lang.Class<?> wildcardClass82 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0d + "'", obj33, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1985");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        stackTestDriver19.clear();
        java.lang.Object obj33 = stackTestDriver13.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver19.push((java.lang.Object) wildcardClass42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver64.getClass();
        java.lang.Object obj71 = stackTestDriver44.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver19.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass75 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1986");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver38.push(obj49);
        java.lang.Object obj51 = stackTestDriver15.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        java.lang.Object obj66 = stackTestDriver52.pop();
        java.lang.Object obj67 = stackTestDriver15.push(obj66);
        java.lang.Object obj68 = stackTestDriver15.pop();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj70 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1987");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1988");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        java.lang.Object obj28 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1989");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Object obj53 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        java.lang.Object obj73 = stackTestDriver67.push((java.lang.Object) 100L);
        java.lang.Object obj75 = stackTestDriver67.push((java.lang.Object) false);
        java.lang.Object obj76 = stackTestDriver67.pop();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver67.push(obj81);
        java.lang.Object obj83 = stackTestDriver62.push(obj81);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver86.pop();
        stackTestDriver86.clear();
        java.lang.Object obj93 = stackTestDriver62.push((java.lang.Object) stackTestDriver86);
        java.lang.Object obj94 = stackTestDriver55.push((java.lang.Object) stackTestDriver86);
        stackTestDriver86.clear();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver86);
        java.lang.Class<?> wildcardClass97 = stackTestDriver86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0f + "'", obj66, 0.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1990");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver6.push((java.lang.Object) wildcardClass29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver52.push(obj71);
        java.lang.Object obj74 = stackTestDriver52.pop();
        java.lang.Object obj75 = stackTestDriver37.push(obj74);
        java.lang.Object obj76 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj77 = stackTestDriver6.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1991");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        stackTestDriver20.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1992");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj85 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj86 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1993");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver18.push(obj24);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver28.push(obj42);
        java.lang.Object obj44 = stackTestDriver18.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj45 = stackTestDriver28.pop();
        java.lang.Object obj46 = stackTestDriver0.push((java.lang.Object) stackTestDriver28);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj75 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj76 = stackTestDriver62.push((java.lang.Object) 10.0f);
        java.lang.Object obj77 = stackTestDriver54.push((java.lang.Object) stackTestDriver62);
        java.lang.Class<?> wildcardClass78 = stackTestDriver62.getClass();
        java.lang.Object obj79 = stackTestDriver47.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj80 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver47);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10.0f + "'", obj75, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10.0f + "'", obj76, 10.0f);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1994");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver50.push((java.lang.Object) 1);
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1995");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        stackTestDriver49.clear();
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1996");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Object obj71 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = stackTestDriver75.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj87 = stackTestDriver80.pop();
        java.lang.Class<?> wildcardClass88 = stackTestDriver80.getClass();
        java.lang.Object obj89 = stackTestDriver72.push((java.lang.Object) stackTestDriver80);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj94 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1997");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj80 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj81 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        stackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver82.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver66.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = stackTestDriver55.push(obj87);
        java.lang.Object obj89 = stackTestDriver14.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10.0f + "'", obj79, 10.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1998");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver31.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj43 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass44 = stackTestDriver36.getClass();
        java.lang.Object obj45 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj46 = stackTestDriver6.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj47 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        java.lang.Object obj57 = stackTestDriver48.pop();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver48.push(obj62);
        java.lang.Object obj64 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver48.getClass();
        java.lang.Object obj67 = stackTestDriver28.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass69 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test1999");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_3.test2000");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver5.push((java.lang.Object) 1);
        java.lang.Object obj16 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj41 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = stackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj51 = stackTestDriver42.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver42.push(obj56);
        java.lang.Object obj58 = stackTestDriver17.push(obj56);
        java.lang.Object obj59 = stackTestDriver5.push(obj56);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
    }
}

